/**
 * << 아이디어 >>
 * 계단을 1개 또는 2개씩 올라갈 수 있다.
 *
 * 그렇다는 말은 n개의 계단을 올라가는 방법은
 * n-1개의 계단을 올라가는 방법과 n-2개의 계단을 올라가는 방법의 합이라는 것이다.
 *
 * 점화식으로 표현하면,
 * s[n] = s[n-1] + s[n-2]이다.
 */

/**
 * << 복잡도 >>
 * 시간복잡도 : O(n)
 * 공간복잡도 : O(n) -> O(1)로 줄일 수 있다.
 */

/**
 * << Example >>
 * s[n] = s[n-1] + s[n-2]
 *
 * s[2] = s[1] + s[0] (2)
 * s[3] = s[2] + s[1] (3)
 * s[4] = s[3] + s[2] (5)
 * s[5] = s[4] + s[3] (8)
 */

function climbStairs(n: number): number {
  const s = Array(n + 1);

  s[0] = 1;
  s[1] = 1;
  s[2] = 2;

  for (let i = 3; i < n + 1; i++) {
    s[i] = s[i - 1] + s[i - 2];
  }

  return s[n];
}
